#! /bin/bash
# FS QA Test No. 077
#
# Check use of ACLs (extended attributes) on a full filesystem
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2003 Silicon Graphics, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#
# creator
owner=nathans@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1
# Something w/ enough data to fill 50M of fs...
filler=/lib/modules/

_cleanup()
{
	cd /
	echo "*** unmount"
	umount $SCRATCH_MNT 2>/dev/null
}
trap "_cleanup; rm -f $tmp.*; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter
. ./common.attr

# real QA test starts here
_supported_fs generic
_supported_os Linux

[ ! -d $filler ] && _notrun "No directory to source files from"

_require_attrs
_require_acls
_require_user

echo "*** create filesystem"

rm -f $seq.full
umount $SCRATCH_DEV >/dev/null 2>&1
echo "*** MKFS ***"                         >>$seq.full
echo ""                                     >>$seq.full
SIZE=`expr 50 \* 1024 \* 1024`
_scratch_mkfs_sized $SIZE                   >>$seq.full 2>&1 \
	|| _fail "mkfs failed"
_scratch_mount                              >>$seq.full 2>&1 \
	|| _fail "mount failed"
mkdir $SCRATCH_MNT/subdir

echo "*** set default ACL"
setfacl -R -dm u:fsgqa:rwx,g::rwx,o::r-x,m::rwx $SCRATCH_MNT/subdir

echo "*** populate filesystem, pass #1" | tee -a $seq.full
cp -rf $filler $SCRATCH_MNT/subdir >$seq.full 2>&1

echo "*** populate filesystem, pass #2" | tee -a $seq.full
cp -rf $filler $SCRATCH_MNT/subdir >$seq.full 2>&1

_check_scratch_fs

echo "*** all done"
rm -f $seq.full
status=0
exit
