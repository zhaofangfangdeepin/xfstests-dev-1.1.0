QA output created by 031
=== one entry (shortform)
Repairing, iteration 1
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 2
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 3
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 4
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done

=== twenty entries (block form)
Repairing, iteration 1
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 2
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 3
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 4
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done

=== thousand entries (leaf form)
Repairing, iteration 1
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 2
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 3
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done
Repairing, iteration 4
Phase 1 - find and verify superblock...
Phase 2 - using <TYPEOF> log
Phase 3 - for each AG...
Phase 4 - check for duplicate blocks...
Phase 5 - rebuild AG headers and trees...
Phase 6 - check inode connectivity...
Phase 7 - verify and correct link counts...
done

