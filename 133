#! /bin/bash
# FSQA Test No. 133
#
# Concurrent I/O to same file to ensure no deadlocks
#
#-----------------------------------------------------------------------
# Copyright (c) 2006 Silicon Graphics, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#
# creator
owner=lachlan@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    _cleanup_testdir
}

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# real QA test starts here
_supported_fs generic
_supported_os Linux IRIX

_setup_testdir

echo "Buffered writer, buffered reader"
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test > /dev/null
xfs_io -F -f -c 'pwrite -b 64k 0 512m' $testdir/io_test >/dev/null &
xfs_io -F -c 'pread -b 64k 0 512m' $testdir/io_test > /dev/null
wait
rm $testdir/io_test

echo "Direct writer, buffered reader"
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test > /dev/null
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test >/dev/null &
xfs_io -F -c 'pread -b 64k 0 512m' $testdir/io_test > /dev/null
wait
rm $testdir/io_test

echo "Buffered writer, direct reader"
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test > /dev/null
xfs_io -F -f -c 'pwrite -b 64k 0 512m' $testdir/io_test >/dev/null &
xfs_io -F -d -c 'pread -b 64k 0 512m' $testdir/io_test > /dev/null
wait
rm $testdir/io_test

echo "Direct writer, direct reader"
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test > /dev/null
xfs_io -F -f -d -c 'pwrite -b 64k 0 512m' $testdir/io_test >/dev/null &
xfs_io -F -d -c 'pread -b 64k 0 512m' $testdir/io_test > /dev/null
wait
rm $testdir/io_test

status=0
exit 
